// generated by BSD
module BB2bcImp(
    input [1:0] x,
    input  c,
    output [1:0] y
);
wire [2:0] io_x;
wire [1:0] io_y;
assign io_x = { x, c };
assign { y } = io_y;
wire  _GEN0 = 1'b0;
wire  _GEN1 = 1'b0;
wire  _GEN2 = 1'b1;
wire  _GEN3 = io_x[0] ? _GEN2 : _GEN1;
wire  _GEN4 = io_x[1] ? _GEN3 : _GEN0;
wire  _GEN5 = 1'b1;
wire  _GEN6 = io_x[1] ? _GEN5 : _GEN3;
wire  _GEN7 = io_x[2] ? _GEN6 : _GEN4;
assign io_y[1] = _GEN7;
wire  _GEN8 = 1'b0;
wire  _GEN9 = 1'b1;
wire  _GEN10 = io_x[0] ? _GEN9 : _GEN8;
wire  _GEN11 = 1'b0;
wire  _GEN12 = io_x[1] ? _GEN11 : _GEN10;
wire  _GEN13 = 1'b1;
wire  _GEN14 = io_x[1] ? _GEN10 : _GEN13;
wire  _GEN15 = io_x[2] ? _GEN14 : _GEN12;
assign io_y[0] = _GEN15;
endmodule